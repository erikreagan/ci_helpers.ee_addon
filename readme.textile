h1. CI Helpers

Bring CI Helpers into your EE templates. Full docs coming down the road...


h2. Caveat emptor

*It is not recommended you use this plugin yet on a live site. There could be security implications due to what some of the CI helpers do.*


h2. Compatibility

CI Helpers requires ExpressionEngine 2.1.3 or greater


h2. Installation

* Move the @ci_helper@ folder into your @expressionengine/third_party@ folder


h2. Usage

This add-on is only about 90 minutes old. Don't bend it too much unless you plan to patch/contribute and issue a pull request :)

CI Helpers runs off of a single tag with a few parameters. The key parameters are @helper@ and @function@. As you assumed, @helper@ will be the Helper you want and @function@ is the function within the Helper. To see what helpers and functions are available, familiarize yourself with "CodeIgniter":http://codeigniter.com/user_guide/. 

Sample syntax:

<pre><code>{exp:ci_helpers
    helper="html"
    function="doctype"
    argument[0]="html5"
}
</code></pre>

The above code uses CI's HTML Helper and the Doctype function to create the markup for an HTML5 doctype declaration. This is the output:

<pre><code><!DOCTYPE html>
</code></pre>

Some CI helpers take arrays as parameters. You can send an array by delimiting values with a character of your choice. The default setting is a pipe ("|"). Alternatively you can define both the key and value in the array string.

Here is an example of using an array of values (using the @random_element()@ function in the "Array Helper":http://codeigniter.com/user_guide/helpers/array_helper.html):

<pre><code>{exp:ci_helpers
    helper="array"
    function="random_element"
    array="y"
    argument[0]="My first quote|My second quote|Here is another one"
}
</code></pre>

Here is an example of using an array of key/value pairs (using the @set_cookie()@ function in the "Cookie Helper":http://codeigniter.com/user_guide/helpers/cookie_helper.html):

<pre><code>{exp:ci_helpers
    helper="cookie"
    function="set_cookie"
    array="y"
    argument[0]="name=>The_Cookie_Name|value=>The Value|expire=>86500"
}
</code></pre>

So, in order for any arguments to be processed as an array you must set the parameter @array="y"@ in your tag. For now this impacts all arguments passed, though I'm sure that could be tweaked on a per-argument basis if needed.

You can alternately declare your own value delimiter from a pipe ("|") to something else.

<pre><code>{exp:ci_helpers
    helper="cookie"
    function="set_cookie"
    array="y"
    delimiter="**"
    argument[0]="name=>The_Cookie_Name**value=>The Value**expire=>86500"
}
</code></pre>


h2. Template Logging

Here's a quick sample of how each instance of CI Helper gets logged for template debugging:

<pre>(0.071646) -> Class Called: Ci_helpers
(0.071691)   - Looking for the function "set_cookie()" in the "Cookie" helper
(0.072200)   - Array mode is enabled
(0.072220)   - Arguments have been detected
(0.072247)       - argument[0] -> name=>The_Cookie_Name**value=>The Value**expire=>86500
(0.072274)           - name -> The_Cookie_Name
(0.072296)           - value -> The Value
(0.072317)           - expire -> 86500
</pre>


h2. Todo

* Create list of "unsafe" functions and disable them
* Add in helper file check so as to avoid the core @show_error()@ display if one doesn't exist